DROP TABLE IF EXISTS GSK_USERS CASCADE;
DROP SEQUENCE IF EXISTS GSK_USERS_SEQ;

CREATE SEQUENCE GSK_USERS_SEQ;

CREATE TABLE IF NOT EXISTS GSK_USERS(
	ID BIGINT DEFAULT GSK_USERS_SEQ.nextval PRIMARY KEY,
	FIRST_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50),
	EMAIL VARCHAR (255) UNIQUE NOT NULL,
	PHONE VARCHAR(25),
	RESERV_COUNT BIGINT DEFAULT 0,
	AVAIL_COUNT BIGINT DEFAULT 0,
	IS_ACTIVE NUMERIC(1,0) DEFAULT 1,
	DATE_ENTERED TIMESTAMP DEFAULT now()
	);
	
	
	
	DROP TABLE IF EXISTS GSK_AVAILABLITLIY;
	DROP SEQUENCE IF EXISTS GSK_AVAILABILITY_SEQ;
	
	CREATE SEQUENCE  GSK_AVAILABILITY_SEQ;
	
	CREATE TABLE GSK_AVAILABLITLIY(
	ID BIGINT DEFAULT GSK_AVAILABILITY_SEQ.nextval PRIMARY KEY,
	START_TIME TIMESTAMP NOT NULL, 
	END_TIME TIMESTAMP NOT NULL,
	IS_ACTIVE NUMERIC(1,0) DEFAULT 1,
	USER_ID BIGINT , FOREIGN KEY (USER_ID) REFERENCES GSK_USERS(ID)
	);
	
	
	DROP TABLE IF EXISTS GSK_RESERVATIONS;
	DROP SEQUENCE IF EXISTS GSK_RESERVATIONS_SEQ;
	
	CREATE SEQUENCE GSK_RESERVATIONS_SEQ;
	
	CREATE TABLE GSK_RESERVATIONS(
	ID BIGINT DEFAULT GSK_RESERVATIONS_SEQ.nextval PRIMARY KEY ,
	START_TIME TIMESTAMP NOT NULL, 
	END_TIME TIMESTAMP NOT NULL, 
	TITLE VARCHAR(255) NOT NULL, 
	EMAIL VARCHAR(255) NOT NULL,
	IS_ACTIVE NUMERIC(1,0) DEFAULT 1,
	IS_COMPLETE NUMERIC(1,0) DEFAULT 0,

--	IS_MISSED NUMERIC(1,0) DEFAULT 0,
--
--	IS_CANCELLED NUMERIC(1,0) DEFAULT 0,

	USER_ID BIGINT , FOREIGN KEY(USER_ID) REFERENCES GSK_USERS(ID),
	AVAIL_ID BIGINT, FOREIGN KEY(AVAIL_ID) REFERENCES GSK_AVAILABILITY(ID)
	
	
	);
	
	